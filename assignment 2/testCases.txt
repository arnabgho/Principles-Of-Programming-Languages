%% These are some of the examples that you can test your code on.
%% Note that the keywords may be different from those you have
%% used. Make suitable changes before using these examples to test
%% your code.
%% Examples slightly adapted from that of S. Tulsiani and A. Singh,
%% Y9. 


%%-------------- Record bind ----------------
%It's complete.

[localvar ident(x)
 [localvar ident(y)
  [localvar ident(z)
   [[bind ident(x)
     [record literal(label)
      [[literal(f1) ident(y)]
      [literal(f2) ident(z)]]]]
    [bind ident(x)
     [record literal(label) [[literal(f1) literal(2)] [literal(f2) literal(1)]]]]]]]]

[localvar ident(foo)
  [localvar ident(bar)
   [[bind ident(foo) [record literal(person) [[literal(name) ident(bar)]]]]
    [bind ident(bar) [record literal(person) [[literal(name) ident(foo)]]]]
    [bind ident(foo) ident(bar)]]]]

[localvar ident(foo)
  [localvar ident(bar)
   [[bind ident(foo) [record literal(person) [[literal(name) ident(foo)]]]]
    [bind ident(bar) [record literal(person) [[literal(name) ident(bar)]]]]
    [bind ident(foo) ident(bar)]]]]

[localvar ident(x)
 [localvar ident(y)
  [localvar ident(z)
   [[bind ident(x)
     [record literal(label)
      [[literal(f1) [record literal(2nd) [[literal(f5) ident(y)] [literal(f3) ident(z)]]]]
      [literal(f2) ident(z)]]]]
    [match ident(x)
     [record literal(label) [[literal(f1) [record literal(2nd) [[literal(f5) ident(a)] [literal(f3) ident(b)]]]] [literal(f2) ident(c)]]] [[bind ident(a) literal(1)] [bind ident(b) literal(6)]] [nop]]]]]]
%Record within record

%%---------------- Conditional ---------------
%It's complete

[localvar ident(x)
 [[localvar ident(y)
   [[localvar ident(x)
     [[bind ident(x) ident(y)]
      [bind ident(y) literal(true)]
      [conditional ident(y) [nop]
       [bind ident(x) literal(true)]]]]
    [bind ident(x) literal(35)]]]]]

[localvar ident(foo)
  [localvar ident(result)
   [[bind ident(foo) literal(true)]
    [conditional ident(foo) [bind ident(result) literal(true)]
     [bind ident(result) literal(false)]]
    [bind ident(result) literal(true)]]]]


[localvar ident(foo)
  [localvar ident(result)
   [[bind ident(foo) literal(false)]
    [conditional ident(foo) [bind ident(result) literal(true)]
     [bind ident(result) literal(false)]]
    [bind ident(result) literal(false)]]]]


%%---------- Procedure definition and application ---------	  
%It's complete except 3rd. Closure need to be improved to deal with records and prodedure values

[localvar ident(x)
 [[bind ident(x)
   [proceed [ident(y) ident(x)] [nop]]]
  [apply ident(x) literal(1) literal(2)]
 ]
]

[localvar ident(x)
 [[bind ident(x)
   [proceed [ident(y) ident(x)] [nop]]]
  [apply ident(x)
   literal(1) [record literal(label) [[literal(f1) literal(p)]]]
   ]]]
   
[localvar ident(foo)
 [localvar ident(bar)
  [localvar ident(quux)
   [[bind ident(bar) [proceed [ident(baz)]
          [bind [record literal(person) [[literal(age) ident(foo)]]] ident(baz)]]]
    [apply ident(bar) ident(quux)]
    [bind [record literal(person) [[literal(age) literal(40)]]] ident(quux)]
    [bind literal(42) ident(foo)]]]]]

% We'll check whether foo has been assigned the value by raising an exception here
   
[localvar ident(foo)
 [localvar ident(bar)
  [localvar ident(quux)
   [[bind ident(bar) [proceed [ident(bai)]
          [[localvar ident(kite) [bind ident(kite) [proceed [ident(baz)] [bind ident(baz) [record literal(person) [[literal(age) ident(foo)]]]]]] [apply ident(kite) ident(bai)]]]]]
    [apply ident(bar) ident(quux)]
    [bind [record literal(person) [[literal(age) literal(40)]]] ident(quux)]
    [bind literal(40) ident(foo)]]]]]

%Proc within Proc

%%------------ Pattern Match -------------------
%It's complete

[localvar ident(x)
 [[bind ident(x)
   [record literal(label)
    [[literal(f1) literal(1)]
    [literal(f2) literal(2)]]]]
  [match ident(x)
   [record literal(label)
    [[literal(f1) literal(1)]
    [literal(f2) literal(2)]]] [[nop]] [nop]]]]
   
[localvar ident(foo)
 [localvar ident(result)
  [[bind ident(foo) [record literal(bar)
		     [[literal(baz) literal(42)]
		     [literal(quux) literal(314)]]]]
   [match ident(foo) [record literal(bar)
		      [[literal(baz) ident(fortytwo)]
		      [literal(quux) ident(pitimes100)]]] [bind ident(result) ident(fortytwo)]
    [bind ident(result) literal(314)]]
   [bind ident(result) literal(42)]
   [nop]]]]
% This will raise an exception if result is not 42

[localvar ident(foo)
  [localvar ident(bar)
   [localvar ident(baz)
    [[bind ident(foo) ident(bar)]
     [bind literal(20) ident(bar)]
     [match ident(foo) literal(21) [bind ident(baz) literal(true)]
      [bind ident(baz) literal(false)]]
     [bind ident(baz) literal(false)]
     [nop]]]]]
   
[localvar ident(foo)
  [localvar ident(bar)
   [localvar ident(baz)
    [localvar ident(result)
     [[bind ident(foo) literal(person)]
      [bind ident(bar) literal(age)]
      [bind ident(baz) [record literal(person) [[literal(age) literal(25)]]]]
      [match ident(baz) [record ident(foo) [[ident(bar) ident(quux)]]] [bind ident(result) ident(quux)]
       [bind ident(result) literal(false)]]
      [bind ident(result) literal(25)]]]]]]

[localvar ident(a) [[bind ident(a) [proceed [ident(b)] [localvar ident(foo)
 [localvar ident(result)
  [[bind ident(foo) [record literal(bar)
         [[literal(baz) literal(42)]
         [literal(quux) literal(314)]]]]
   [match ident(foo) [record literal(bar)
          [[literal(baz) ident(fortytwo)]
          [literal(quux) ident(pitimes100)]]] [bind ident(result) ident(fortytwo)]
    [bind ident(result) literal(314)]]
   [bind ident(result) literal(42)]
   [nop]]]]]] [apply ident(a) literal(30)]]]
%Match within Procedure